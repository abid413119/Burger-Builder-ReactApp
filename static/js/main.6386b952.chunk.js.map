{"version":3,"sources":["assets/images/burger-logo.png","hoc/wrapper.js","components/Logo/Logo.js","components/Navigation/NavItems/NavItem/NavItem.js","components/Navigation/NavItems/NavItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","components/Footer/Footer.js","components/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Buttons/Buttons.js","components/Burger/OrderSummary/OrderSummary.js","axios-orders.js","components/UI/Spinner/Spinner.js","containers/BurgerBuilder/BurgerBuilder.js","hoc/withErrorHandler/withErrorHandler.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","wrapper","props","children","Logo","react_default","a","createElement","className","style","height","background","src","burgerLogo","alt","NavItem","active","href","naviItems","NavItems_NavItem_NavItem","DrawerToggle","onClick","showSideDrawer","toolbar","components_Logo_Logo","DrawerToggle_DrawerToggle","NavItems_NavItems","backdrop","show","clicked","sideDrawer","attachedClasses","open","hoc_wrapper","Backdrop_Backdrop","closed","join","Footer","Layout","state","SideDrawerClosedHandler","_this","setState","sideDrawerShowHandler","Toolbar_Toolbar","this","SideDrawer_SideDrawer","Footer_Footer","React","Component","BurgerIngredient","ingredient","type","Burger","transformedIngredients","Object","keys","ingredients","map","igKey","toConsumableArray","Array","_","i","Burger_BurgerIngredient_BurgerIngredient","key","reduce","arr","el","concat","length","BuildControl","label","removed","disabled","added","controls","BuildControls","price","toFixed","item","BuildControl_BuildControl","ingredientAdded","ingredientRemoved","openModal","purchasable","Modal","nextProps","nextState","modalClosed","display","Classes","Success","Danger","button","btnType","orderSummary","ingredientSummary","textTransform","totalPrice","Buttons_Buttons","purchaseCancelHandle","purchaseContinueHandle","axiosInstance","axios","create","baseURL","Spinner","color","WrappedComponent","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","purchaseModal","loading","error","addIngredientHandler","updatedCount","updatedIngredient","objectSpread","priceAddition","newPrice","updatePurchasState","removeIngredientHandler","priceDeduction","purchaseModalHandler","order","customer","name","address","street","zipCode","country","email","deliveryMethod","post","then","response","catch","_this2","get","data","sum","disabledInfo","burger","Spinner_Spinner","Burger_Burger","BuildControls_BuildControls","OrderSummary","Modal_Modal_Modal","withErrorHandler","_Component","_temp","_getPrototypeOf2","classCallCheck","_len","arguments","args","_key","possibleConstructorReturn","getPrototypeOf","call","apply","errorConfirmedHandler","inherits","createClass","value","reqInterceptors","interceptors","request","use","req","resInterceptors","eject","message","App","components_Layout_Layout","containers_BurgerBuilder_BurgerBuilder","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6386b952.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","const wrapper = props => props.children;\r\n\r\nexport default wrapper;","import React from 'react';\r\nimport burgerLogo from '../../assets/images/burger-logo.png';\r\nimport './Logo.css';\r\n\r\n\r\nconst Logo = (props) => {\r\n    return (\r\n        <div className=\"Logo\" style={{height: props.height, background:props.background}}>\r\n            <img src={burgerLogo} alt=\"MyBurger\" />\r\n        </div>\r\n    )\r\n}\r\nexport default Logo;","import React from 'react';\r\nimport './NavItem.css';\r\n\r\nconst NavItem = (props) => (\r\n    <li className=\"NavItem\">\r\n        <a className={props.active?\"active\":null} href=\"/\">{props.children}</a>\r\n    </li>\r\n)\r\nexport default NavItem;","import React from 'react';\r\nimport './NavItems.css';\r\nimport NavItem from './NavItem/NavItem';\r\n\r\nconst naviItems = () => (\r\n    <ul className=\"NavItems\">\r\n        <NavItem active>Burger Builder</NavItem>\r\n        <NavItem>Checkout</NavItem>\r\n    </ul>\r\n);\r\n\r\nexport default naviItems;","import React from 'react';\r\nimport './DrawerToggle.css';\r\n\r\n\r\nexport default function DrawerToggle(props) {\r\n    return (\r\n        <div className=\"mobileOnly DrawerToggle\" onClick={props.showSideDrawer}>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './Toolbar.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavItems from '../NavItems/NavItems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\n\r\n\r\nconst toolbar = (props) => {\r\n    return (\r\n        <header className=\"Toolbar\">\r\n            <Logo />\r\n            <DrawerToggle showSideDrawer={props.showSideDrawer} />\r\n            <nav className=\"desktopOnly\">\r\n                <NavItems />\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\nexport default toolbar;","import React from 'react';\r\nimport './Backdrop.css';\r\n\r\n\r\nconst backdrop = (props) => (\r\n    props.show ? <div className=\"Backdrop\" onClick={props.clicked}></div> : null\r\n)\r\nexport default backdrop;","import React from 'react';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavItems from '../NavItems/NavItems';\r\nimport './SideDrawer.css';\r\nimport Wrapper from '../../../hoc/wrapper';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\n\r\n\r\nconst sideDrawer = (props) => {\r\n    let attachedClasses = ['SideDrawer', 'Close'];\r\n    if(props.open) {\r\n        attachedClasses = ['SideDrawer', 'Open'];\r\n    }\r\n    return (\r\n        <Wrapper>\r\n            <Backdrop show={props.open} clicked={props.closed} />\r\n            <div className={attachedClasses.join(\" \")}>\r\n                <Logo height=\"11%\" background=\"none\"/>\r\n                <nav>\r\n                    <NavItems />\r\n                </nav>\r\n            </div>\r\n        </Wrapper>\r\n    )\r\n}\r\nexport default sideDrawer;","import React from 'react';\r\nimport './Footer.css'\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <div className=\"footer\">\r\n            <p>Made With Love By Abid</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Wrapper from '../../hoc/wrapper';\r\nimport \"./Layout.css\";\r\nimport Toolbar from '../Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../Navigation/SideDrawer/SideDrawer';\r\nimport Footer from '../Footer/Footer';\r\n\r\nclass Layout extends React.Component {\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n\r\n    SideDrawerClosedHandler = () => {\r\n        this.setState({\r\n            showSideDrawer: false\r\n        })\r\n    }\r\n\r\n    sideDrawerShowHandler = () => {\r\n        this.setState({\r\n            showSideDrawer: true\r\n        })\r\n    }\r\n    render () {\r\n        return (\r\n            <Wrapper>\r\n                <Toolbar showSideDrawer={this.sideDrawerShowHandler} />\r\n                <SideDrawer open={this.state.showSideDrawer} closed={this.SideDrawerClosedHandler} />\r\n                <main className=\"Content\">\r\n                    {this.props.children}\r\n                </main>\r\n                \r\n                <Footer />\r\n            </Wrapper>\r\n        )\r\n    }\r\n}\r\nexport default Layout;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './BurgerIngredient.css';\r\n\r\nconst BurgerIngredient = (props) => {\r\n\r\n    let ingredient = null;\r\n\r\n    switch (props.type) {\r\n        case ('bread-bottom'):\r\n            ingredient = <div className=\"BreadBottom\"></div>;\r\n            break;\r\n        case ('bread-top'):\r\n            ingredient = (\r\n                <div className=\"BreadTop\">\r\n                    <div className=\"Seeds1\"></div>\r\n                    <div className=\"Seeds2\"></div>\r\n                </div>\r\n            );\r\n            break;\r\n        case ('meat'):\r\n            ingredient = <div className=\"Meat\"></div>\r\n            break;\r\n        case ('cheese'):\r\n            ingredient = <div className=\"Cheese\"></div>\r\n            break;\r\n        case ('bacon'):\r\n            ingredient = <div className=\"Bacon\"></div>\r\n            break;\r\n        case ('salad'):\r\n            ingredient = <div className=\"Salad\"></div>\r\n            break;\r\n        default:\r\n            ingredient = null;\r\n\r\n    }\r\n\r\n    return ingredient;\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n}\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\nimport './Burger.css';\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\r\n\r\nexport default function Burger(props) {\r\n    const transformedIngredients = Object.keys(props.ingredients)\r\n        .map(igKey => {\r\n            return [...Array(props.ingredients[igKey])].map((_, i) => {\r\n                return <BurgerIngredient key={igKey + i} type={igKey} />\r\n            })\r\n        })\r\n        .reduce((arr, el) => {\r\n            return arr.concat(el)\r\n        }, [])\r\n    \r\n    return (\r\n        <div className=\"Burger\">\r\n            <BurgerIngredient type=\"bread-top\" />\r\n            {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\" />\r\n            {\r\n                transformedIngredients.length === 0 ? <h3>Start Adding Ingredients</h3> : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './BuildControl.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function BuildControl(props) {\r\n    return (\r\n        <div className=\"BuildControl\">\r\n            <div className=\"Label\">{props.label}</div>\r\n            <button onClick={props.removed}  className=\"Less\" disabled={props.disabled}>Less</button>\r\n            <button onClick={props.added} className=\"More\">More</button> \r\n        </div>\r\n    )\r\n}\r\n\r\nBuildControl.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    disabled: PropTypes.bool.isRequired,\r\n    removed: PropTypes.func.isRequired,\r\n    added: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport './BuildControls.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\nconst controls = [\r\n    {label: 'Salad', type: 'salad'},\r\n    {label: 'Bacon', type: 'bacon'},\r\n    {label: 'Cheese', type: 'cheese'},\r\n    {label: 'Meat', type: 'meat'}\r\n]\r\n\r\nexport default function BuildControls(props) {\r\n    return (\r\n        <div className=\"BuildControls\">\r\n            <p>Total Price: <strong>{props.price.toFixed(2)}$</strong></p>\r\n            {\r\n                controls.map(item => (\r\n                    <BuildControl\r\n                        key={item.label} \r\n                        label={item.label} \r\n                        added={() => props.ingredientAdded(item.type)}\r\n                        removed={() => props.ingredientRemoved(item.type)}\r\n                        disabled={props.disabled[item.type]}\r\n                        />\r\n                ))\r\n            }\r\n            <button \r\n                className=\"OrderButton\" \r\n                onClick={() => props.openModal()}\r\n                disabled={!props.purchasable}>\r\n                    Order Now\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","// import React from 'react';\r\nimport './Modal.css';\r\nimport Wrapper from '../../../hoc/wrapper';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\n// const modal = (props) => (\r\n//     <Wrapper>\r\n//         <Backdrop show={props.show} clicked={props.modalClosed} />\r\n//         <div\r\n//             className=\"Modal\"\r\n//             style={{\r\n//                 display: props.show ? \"block\" : \"none\"\r\n//             }}\r\n//         >\r\n//             {props.children}\r\n//         </div>\r\n//     </Wrapper>\r\n// );\r\n\r\n// export default modal;\r\n\r\nimport React, { Component } from 'react'\r\n\r\nexport default class Modal extends Component {\r\n\r\n    shouldComponentUpdate(nextProps, nextState){\r\n        return this.props.show !== nextProps.show || this.props.children !== nextProps.children\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Wrapper>\r\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\r\n                <div\r\n                    className=\"Modal\"\r\n                    style={{\r\n                        display: this.props.show ? \"block\" : \"none\"\r\n                    }}\r\n                >\r\n                    {this.props.children}\r\n                </div>\r\n            </Wrapper>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './Buttons.css';\r\n\r\nconst Classes = {\r\n    Success: 'Success',\r\n    Danger: 'Danger'\r\n}\r\n\r\nconst button = (props) =>( \r\n    <button\r\n        onClick={props.clicked}\r\n        className={['Button', Classes[props.btnType]].join(\" \")}\r\n    >\r\n        {props.children}\r\n    </button>\r\n)\r\nexport default button;","import React from 'react';\r\nimport Wrapper from '../../../hoc/wrapper';\r\nimport Button from '../../UI/Buttons/Buttons';\r\n\r\n\r\nconst orderSummary = (props) => {\r\n    const ingredientSummary = Object.keys(props.ingredients).map(igKey => {\r\n        return (\r\n            <li key={igKey}>\r\n                <span style={{textTransform: \"capitalize\"}}>{igKey}</span>: {props.ingredients[igKey]}\r\n            </li>\r\n        )\r\n    })\r\n    return (\r\n        <Wrapper>\r\n            <h3>Your Order</h3>\r\n            <p>A delicious burger with following ingredients:</p>\r\n            <ul>{ingredientSummary}</ul>\r\n            <p><strong>Total Price: ${props.totalPrice}</strong></p>\r\n            <Button clicked={props.purchaseCancelHandle} btnType=\"Danger\">Cancel</Button>\r\n            <Button clicked={props.purchaseContinueHandle} btnType=\"Success\">Continue</Button>\r\n        </Wrapper>\r\n    )\r\n}\r\nexport default orderSummary;\r\n\r\n// import React, { Component } from 'react'\r\n\r\n// export default class OrderSummary extends Component {\r\n//     render() {\r\n//         const ingredientSummary = Object.keys(this.props.ingredients).map(igKey => {\r\n//             return (\r\n//                 <li key={igKey}>\r\n//                     <span style={{textTransform: \"capitalize\"}}>{igKey}</span>: {this.props.ingredients[igKey]}\r\n//                 </li>\r\n//             )\r\n//         })\r\n//         return (\r\n//             <Wrapper>\r\n//                 <h3>Your Order</h3>\r\n//                 <p>A delicious burger with following ingredients:</p>\r\n//                 <ul>{ingredientSummary}</ul>\r\n//                 <p><strong>Total Price: ${this.props.totalPrice}</strong></p>\r\n//                 <Button clicked={this.props.purchaseCancelHandle} btnType=\"Danger\">Cancel</Button>\r\n//                 <Button clicked={this.props.purchaseContinueHandle} btnType=\"Success\">Continue</Button>\r\n//             </Wrapper>\r\n//         )\r\n//     }\r\n// }\r\n","import axios from 'axios';\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: \"https://burger-builder-eca19.firebaseio.com/\"\r\n});\r\n\r\nexport default axiosInstance;","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nexport default function Spinner(props) {\r\n    return (\r\n        <div style={{color: props.color}} className=\"loader\">Loading...</div>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport Wrapper from '../../hoc/wrapper';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport './BurgerBuilder.css';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport axios from '../../axios-orders';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\n\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.2,\r\n    bacon: 0.6\r\n}\r\n\r\nclass BurgerBuilder extends Component {\r\n\r\n    state = {\r\n        ingredients: null,\r\n        totalPrice: 4,\r\n        purchasable: false,\r\n        purchaseModal: false,\r\n        loading: false,\r\n        error: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('https://burger-builder-eca19.firebaseio.com/ingredients.json')\r\n            .then(response => this.setState({ ingredients: response.data }))\r\n            .catch(error => {this.setState({error:true})})\r\n    }\r\n\r\n    updatePurchasState(ingredients) {\r\n        const sum = Object.keys(ingredients)\r\n            .map(igKey => {\r\n                return ingredients[igKey]\r\n            })\r\n            .reduce((sum, el) => {\r\n                return sum + el\r\n            }, 0)\r\n\r\n        this.setState({\r\n            purchasable: sum > 0\r\n        })\r\n\r\n    }\r\n\r\n    addIngredientHandler = (type) => {\r\n        // ingredient update\r\n        const oldCount = this.state.ingredients[type];\r\n        const updatedCount = oldCount + 1;\r\n        const updatedIngredient = {\r\n            ...this.state.ingredients\r\n        }\r\n        updatedIngredient[type] = updatedCount;\r\n\r\n        // price update\r\n        const priceAddition = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice + priceAddition;\r\n\r\n        this.setState({ ingredients: updatedIngredient, totalPrice: newPrice })\r\n        this.updatePurchasState(updatedIngredient)\r\n    }\r\n\r\n    removeIngredientHandler = (type) => {\r\n        // ingredient update\r\n        const oldCount = this.state.ingredients[type];\r\n        const updatedCount = oldCount - 1;\r\n        const updatedIngredient = {\r\n            ...this.state.ingredients\r\n        }\r\n        updatedIngredient[type] = updatedCount;\r\n\r\n        // price update\r\n        const priceDeduction = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice - priceDeduction;\r\n\r\n        this.setState({ ingredients: updatedIngredient, totalPrice: newPrice })\r\n        this.updatePurchasState(updatedIngredient)\r\n    }\r\n\r\n    purchaseModalHandler = () => {\r\n        this.setState({\r\n            purchaseModal: true\r\n        })\r\n    }\r\n\r\n    purchaseCancelHandle = () => {\r\n        this.setState({\r\n            purchaseModal: false\r\n        })\r\n    }\r\n\r\n    purchaseContinueHandle = () => {\r\n        this.setState({ loading: true })\r\n        const order = {\r\n            ingredients: this.state.ingredients,\r\n            price: this.state.totalPrice,\r\n            customer: {\r\n                name: \"Abid Al Amin\",\r\n                address: {\r\n                    street: 'TestStreet 1',\r\n                    zipCode: '445125',\r\n                    country: 'Bangladesh'\r\n                },\r\n                email: 'test@test.com'\r\n            },\r\n            deliveryMethod: 'fastest'\r\n        }\r\n\r\n        axios.post('/orders.json', order)\r\n            .then(response => {\r\n                this.setState({ loading: false, purchaseModal: false })\r\n            })\r\n            .catch(error => {\r\n                this.setState({ loading: false, purchaseModal: false })\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const disabledInfo = {\r\n            ...this.state.ingredients\r\n        }\r\n        for (let key in disabledInfo) {\r\n            disabledInfo[key] = disabledInfo[key] <= 0;\r\n        }\r\n\r\n        let orderSummary = null\r\n        \r\n        let burger = this.state.error?<p>Can't load ingredients. Server Error!</p>:<Spinner color=\"red\" />\r\n        if (this.state.ingredients) {\r\n            burger = (\r\n                <Wrapper>\r\n                    <Burger className=\"Burger\" ingredients={this.state.ingredients} />\r\n                    <BuildControls\r\n                        className=\"Controls\"\r\n                        ingredientAdded={this.addIngredientHandler}\r\n                        ingredientRemoved={this.removeIngredientHandler}\r\n                        disabled={disabledInfo}\r\n                        price={this.state.totalPrice}\r\n                        openModal={this.purchaseModalHandler}\r\n                        purchasable={this.state.purchasable}\r\n                    />\r\n                </Wrapper>\r\n            )\r\n            orderSummary = (<OrderSummary\r\n                ingredients={this.state.ingredients}\r\n                purchaseCancelHandle={this.purchaseCancelHandle}\r\n                purchaseContinueHandle={this.purchaseContinueHandle}\r\n                totalPrice={this.state.totalPrice.toFixed(2)}\r\n            />)\r\n        }\r\n        if (this.state.loading) {\r\n            orderSummary = <Spinner color=\"white\" />\r\n        }\r\n\r\n        return (\r\n            <Wrapper>\r\n                <Modal show={this.state.purchaseModal} modalClosed={this.purchaseCancelHandle}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                \r\n                {burger}\r\n\r\n            </Wrapper>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withErrorHandler(BurgerBuilder, axios);","import React, { Component } from 'react';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport Wrapper from '../wrapper';\r\n\r\n\r\nexport default function withErrorHandler(WrappedComponent, axios) {\r\n    return class extends Component {\r\n\r\n        state = {\r\n            error: null\r\n        }\r\n\r\n        componentDidMount(){\r\n            this.reqInterceptors = axios.interceptors.request.use(req => {\r\n                this.setState({error: null})\r\n                return req\r\n            })\r\n            this.resInterceptors = axios.interceptors.response.use(req => req, error => {\r\n                this.setState({error:error})\r\n            });\r\n        }\r\n\r\n        componentWillUnmount(){\r\n            axios.interceptors.request.eject(this.reqInterceptors)\r\n            axios.interceptors.response.eject(this.resInterceptors)\r\n        }\r\n\r\n        errorConfirmedHandler = () => {\r\n            this.setState({error: null})\r\n        }\r\n\r\n        render() {\r\n            return (\r\n                <Wrapper>\r\n                    <Modal show={this.state.error} modalClosed={this.errorConfirmedHandler}>\r\n                        {this.state.error ? this.state.error.message: null}\r\n                </Modal>\r\n                    <WrappedComponent {...this.props} />\r\n                </Wrapper>\r\n            )\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\nimport Layout  from './components/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\n\nfunction App() {\n  return (\n    <div>\n        <Layout>\n            <BurgerBuilder />\n        </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}